plugins {
    id 'java-library'
    id 'eclipse'
    id 'idea'
    id 'maven-publish'
    id 'net.neoforged.gradle.userdev' version '7.0.101'
}
//apply from: 'https://gist.githubusercontent.com/Technici4n/facbcdf18ce1a556b76e6027180c32ce/raw/059ab3d504a590461746fc6e3065159f4932a960/classremapper.gradle'

group = mod_group_id
version = mod_version

repositories {
    mavenLocal()
}

base {
    archivesName = mod_id
}

java.toolchain.languageVersion = JavaLanguageVersion.of(17) 
    
//minecraft.accessTransformers.file rootProject.file('src/main/resources/META-INF/accesstransformer.cfg')


// Default run configurations.
// These can be tweaked, removed, or duplicated as needed.
runs {
    // applies to all the run configs below
    configureEach {
        workingDirectory project.file('run')

        // Recommended logging data for a userdev environment
        // The markers can be added/remove as needed separated by commas.
        // "SCAN": For mods scan.
        // "REGISTRIES": For firing of registry events.
        // "REGISTRYDUMP": For getting the contents of all registries.
        systemProperty 'forge.logging.markers', 'REGISTRIES'

        // Recommended logging level for the console
        // You can set various levels here.
        // Please read: https://stackoverflow.com/questions/2031163/when-to-use-the-different-log-levels
        systemProperty 'forge.logging.console.level', 'debug'

        modSource project.sourceSets.main
    }

    client {
            // Comma-separated list of namespaces to load gametests from. Empty = all namespaces.
        systemProperty 'forge.enabledGameTestNamespaces', project.mod_id
    }

    server {
        // Comma-separated list of namespaces to load gametests from. Empty = all namespaces.
        systemProperty 'forge.enabledGameTestNamespaces', project.mod_id
    }

    // This run config launches GameTestServer and runs all registered gametests, then exits.
    // By default, the server will crash when no gametests are provided.
    // The gametest system is also enabled by default for other run configs under the /test command.
    gameTestServer {
        // Comma-separated list of namespaces to load gametests from. Empty = all namespaces.
        systemProperty 'forge.enabledGameTestNamespaces', project.mod_id
    }

    data {
        workingDirectory project.file('run')
        // Specify the modid for data generation, where to output the resulting resource, and where to look for existing resources.
        programArguments.addAll '--mod', project.mod_id, '--all', '--output', file('src/generated/resources/').getAbsolutePath(), '--existing', file('src/main/resources/').getAbsolutePath()
    }
} // end runs

// uncomment if including JEI support
sourceSets.main.java { srcDir 'src/api/java' }

// Include resources generated by data generators.
sourceSets.main.resources { srcDir 'src/generated/resources' }

dependencies {
    // Specify the version of Minecraft to use.
    implementation "net.neoforged:neoforge:${neo_version}"

    // UNCOMMENT JEI stuff if JEI support ready.
    // compile against the JEI API but do not include it at runtime
    compileOnly "mezz.jei:jei-${version_mcjei}-common-api:${jei_version}"
    compileOnly "mezz.jei:jei-${version_mcjei}-neoforge-api:${jei_version}"
    // at runtime, use the full JEI jar for Forge
    runtimeOnly "mezz.jei:jei-${version_mcjei}-neoforge:${jei_version}"

    // TOP
    runtimeOnly "mcjty.theoneprobe:theoneprobe:${top_version}"
} // end-dependencies


repositories {
    maven {
        name = "mcmodsrepo"
        url = "file:///${project.projectDir}/../mcmodsrepo"
    }
    maven {
        // location of the maven that hosts JEI files since January 2023
        name = "Jared's maven"
        url = "https://maven.blamejared.com/"
    }
    maven {
        // location of a maven mirror for JEI files, as a fallback
        name = "ModMaven"
        url = "https://modmaven.dev"
    }
    maven {
        // fallback if not available locally.
        name = "CurseForge"
        url = "https://minecraft.curseforge.com/api/maven/"
    }
    maven {
        // location of maven that hosts TOP (The One Probe)
        url = "https://maven.k-4u.nl"
    }

}


// This block of code expands all declared replace properties in the specified resource targets.
// A missing property will result in an error. Properties are expanded using ${} Groovy notation.
// When "copyIdeResources" is enabled, this will also run before the game launches in IDE environments.
// See https://docs.gradle.org/current/dsl/org.gradle.language.jvm.tasks.ProcessResources.html
tasks.withType(ProcessResources).configureEach {
    var replaceProperties = [
            minecraft_version: minecraft_version, 
            minecraft_version_range: minecraft_version_range,
        neo_version: neo_version, 
        neo_version_range: neo_version_range,
            loader_version_range: loader_version_range,
            mod_id: mod_id, 
            mod_name: mod_name, 
            mod_license: mod_license, 
        mod_version: mod_version,
            mod_authors: mod_authors, 
            mod_description: mod_description,
        pack_format_number: pack_format_number,
        version_mcjei : version_mcjei,
        jei_version : jei_version,
        jei_version_range : jei_version_range,
        top_version : top_version, 
    ]
    inputs.properties replaceProperties

    filesMatching(['META-INF/mods.toml', 'pack.mcmeta']) {
        expand replaceProperties + [project: project]
    }
} // end-tasks


// Example configuration to allow publishing using the maven-publish task

publishing {
    publications {
        register('mavenJava', MavenPublication) {
            groupId = 'simplecore-api'
            from components.java
        }
    }
    repositories {
        maven {
            name = "mcmodsrepo"
            url = "file:///${project.projectDir}/../mcmodsrepo"
        }
    }
}

tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8' // Use the UTF-8 charset for Java compilation
}
